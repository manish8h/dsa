print("hello")

, "copyright", "credits" or "license" for more information.
>>> 3/2
1.5
>>> 3//2
1
>>> 3**2
9
>>> 3%2
1
>>> 5%2
1
>>> 3+2
5
>>> 3-2
1
>>> 2-3
-1
>>> 3*2
6
>>> 3**2
9
>>> 3***2
  File "<stdin>", line 1
    3***2
       ^
SyntaxError: invalid syntax
>>> 3**2
9
>>> 3**2*2
18
>>> 3**2**2
81
>>> 3*2+1
7
>>> 3*(2+1)
9
>>>

>>> num = 1
>>> num++
  File "<stdin>", line 1
    num++
         ^
SyntaxError: invalid syntax
>>> num++1
2
>>> num++1
2
>>> num+=1
>>> num
2
>>> num+=1
>>> num
3
>>> num -=1
>>> num*=10
>>> num
20
>>> num*=10
>>> num
200
>>> -3.abs
  File "<stdin>", line 1
    -3.abs
      ^
SyntaxError: invalid decimal literal
>>> abs(-3)
3
>>> abs(-3.3)
3.3
>>> round(-3.3)
-3
>>> 3>2
True
>>> 3>=2
True
>>> 3=>2
  File "<stdin>", line 1
    3=>2
    ^
SyntaxError: cannot assign to literal
>>> 3<=2
False
>>> 3>=2
True
>>> 3!=2
True
>>>
>>> 3==2
False
>>> 3==3
True
>>>


>>>
>>> num1 = "100"
>>> num2= '100'
>>> type(num1)
<class 'str'>
>>> num1+num2
'100100'
>>> int(num1)
100
>>> int(num1)+int(num2)
200
>>> "100".int
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'str' object has no attribute 'int'
>>> int("1000")
1000
>>> int("1000.12")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: invalid literal for int() with base 10: '1000.12'
>>> float("1000.12")
1000.12
>>> round(float("1000.12"))
1000
>>> round(float("1000.12"))